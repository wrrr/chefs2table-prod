"use strict";
'use client';
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Img = void 0;
var react_1 = __importDefault(require("react"));
var with_builder_1 = require("../../functions/with-builder");
var file_types_constant_1 = require("src/constants/file-types.constant");
var Image_1 = require("../Image");
// TODO: srcset, alt text input, object size/position input, etc
var ImgComponent = /** @class */ (function (_super) {
    __extends(ImgComponent, _super);
    function ImgComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ImgComponent.prototype.getSrcSet = function () {
        var url = this.props.image;
        if (!url || typeof url !== 'string') {
            return;
        }
        // We can auto add srcset for cdn.builder.io images
        if (!url.match(/builder\.io/)) {
            return;
        }
        return (0, Image_1.getSrcSet)(url);
    };
    ImgComponent.prototype.render = function () {
        var attributes = this.props.attributes || {};
        var srcset = this.getSrcSet();
        var userStyle = attributes.style, restAttributes = __rest(attributes, ["style"]);
        var defaultStyle = {
            objectFit: this.props.backgroundSize,
            objectPosition: this.props.backgroundPosition,
            aspectRatio: this.props.aspectRatio,
        };
        var mergedStyle = __assign(__assign({}, defaultStyle), userStyle);
        return (react_1.default.createElement("img", __assign({ loading: "lazy" }, restAttributes, { src: this.props.image || attributes.src, srcSet: srcset, alt: this.props.altText, title: this.props.title, style: mergedStyle, className: "builder-raw-img" })));
    };
    return ImgComponent;
}(react_1.default.Component));
exports.Img = (0, with_builder_1.withBuilder)(ImgComponent, {
    name: 'Raw:Img',
    hideFromInsertMenu: true,
    image: 'https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-insert_photo-24px.svg?alt=media&token=4e5d0ef4-f5e8-4e57-b3a9-38d63a9b9dc4',
    inputs: [
        {
            name: 'image',
            bubble: true,
            type: 'file',
            allowedFileTypes: file_types_constant_1.IMAGE_FILE_TYPES,
            required: true,
        },
        {
            name: 'backgroundSize',
            type: 'text',
            defaultValue: 'cover',
            enum: [
                {
                    label: 'contain',
                    value: 'contain',
                    helperText: 'The image should never get cropped',
                },
                {
                    label: 'cover',
                    value: 'cover',
                    helperText: "The image should fill it's box, cropping when needed",
                },
            ],
        },
        {
            name: 'backgroundPosition',
            type: 'text',
            defaultValue: 'center',
            enum: [
                'center',
                'top',
                'left',
                'right',
                'bottom',
                'top left',
                'top right',
                'bottom left',
                'bottom right',
            ],
        },
        {
            name: 'altText',
            type: 'string',
            helperText: 'Text to display when the user has images off',
        },
        {
            name: 'title',
            type: 'string',
            helperText: 'Text to display when hovering over the asset',
        },
        {
            name: 'aspectRatio',
            type: 'number',
            helperText: "This is the ratio of height/width, e.g. set to 1.5 for a 300px wide and 200px tall photo. Set to 0 to not force the image to maintain it's aspect ratio",
            advanced: true,
            defaultValue: 0.7041,
        },
    ],
    noWrap: true,
});
//# sourceMappingURL=Img.js.map